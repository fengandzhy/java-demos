package org.frank.java.interview;



/**
 * 面向对象编程（Object-Oriented Programming，OOP）有四个主要的特征，通常被称为"面向对象的四大特性"，它们是：
 *
 * 封装（Encapsulation）：
 *
 * 封装是一种将数据（属性）和操作数据的方法（方法）捆绑在一起的机制。这意味着对象的内部状态是私有的，只有通过对象的公有方法才能访问和修改这些状态。封装提供了数据隐藏和访问控制，以确保数据的完整性和安全性。
 * 继承（Inheritance）：
 *
 * 继承允许一个类（子类或派生类）继承另一个类（父类或基类）的属性和方法。子类可以重用父类的成员，同时可以在不修改父类的情况下添加新的成员或修改继承的成员。继承支持代码重用和层次结构的构建。
 * 多态（Polymorphism）：
 *
 * 多态是一种允许不同类的对象对相同的消息做出不同的响应的机制。多态性使得可以通过通用接口来操作不同类的对象，而不必关心具体的对象类型。多态性可以通过继承和接口实现，它提高了代码的灵活性和可扩展性。
 * 抽象（Abstraction）：
 *
 * 抽象是一种将对象的共同特征和行为提取出来，形成抽象类和接口的过程。抽象类和接口定义了对象的结构和行为，但没有提供具体的实现。它们用于描述对象的基本特征，而具体的子类需要提供具体的实现。抽象性提高了代码的可维护性和可理解性。
 * 这些面向对象的特征共同用于创建模块化、可维护、可重用的代码，它们有助于将现实世界的问题映射到程序设计中，并提供了一种强大的方法来组织和管理复杂的系统。使用这些特征，开发人员可以更容易地建立面向对象的模型，实现代码重用，提高代码的可扩展性，并降低系统的复杂性。
 * 
 * 
 * 
 * 
 * */
public class Interview001 {
}
